---
  # Set up user and group

  - name: create group "{{ group }}"
    group:
      name: "{{ group }}"
      state: present

  - name: check if modify user password or not
    fail:
      msg: "Please enter a new password for {{ user }}!"
    when: not user_password

  - name: create user "{{ user }}"
    user:
      name: "{{ user }}"
      comment: "User for web apps"
      group: "{{ group }}"
      password: "{{ user_password }}"

  # Create directories

  - name: create web apps directory structure
    file:
      path: '{{ item }}'
      state: directory
      group: "{{ group }}"
      owner: "{{ user }}"
      mode: 0770
    with_items:
      - /opt
      - /opt/docker
      - /opt/docker/workspace
      - "{{ hubot_path }}"

  - name: create /opt/keytool_files directory
    file:
      path: "{{ item }}"
      state: directory
      group: "{{ group }}"
      owner: "{{ user }}"
      mode: 0555
    with_items:
      - /opt/keytool_files
      - /opt/keytool_files/backup

  - name: copy scripts
    template:
      src: "templates/{{ item.src }}"
      dest: "{{ item.dest }}"
      group: "{{ group }}"
      owner: "{{ user }}"
      mode: 0554
      force: yes
    with_items:
      - { src: "jenkins-start-app.j2", dest: "{{ jenkins_script_path }}" }
      - { src: "start-container.j2", dest: "{{ script_path }}" }
      - { src: "hubot-start.j2", dest: "{{ hubot_script_path }}" }
      - { src: "jenkins-hubot-start.j2", dest: "{{ hubot_jenkins_script_path }}" }

  # Add lines to sudoers file so jenkins can run the scripts
  # This also prevents adding apis user to the docker group

  - name: add new lines to sudoers file
    lineinfile:
      dest: /etc/sudoers
      insertafter: '## Allow root to run any commands anywhere'
      line: "{{ item }}"
    with_items:
      - "Defaults:{{ user }} !requiretty"
      - "{{ user }} ALL=(ALL) NOPASSWD: {{ script_path }}"
      - "{{ user }} ALL=(ALL) NOPASSWD: {{ hubot_script_path }}"
