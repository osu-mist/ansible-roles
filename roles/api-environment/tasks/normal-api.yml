---
  - name: "create group {{ api_group }}"
    group:
      name: "{{ api_group }}"
      state: present

  - name: "create user {{ api_user }}"
    user:
      name: "{{ api_user }}"
      comment: "OSU APIs"
      group: "{{ api_group }}"
      password: "{{ api_user_password }}"
      update_password: on_create
      state: present

  - name: "create apis directory structure"
    file:
      path: "{{ api_home }}/{{ item.path }}"
      state: directory
      group: "{{ api_group }}"
      owner: "{{ api_user }}"
      mode: "{{ item.mode }}"
    with_items:
      - { path: "", mode: "0770" }
      - { path: "apis", mode: "0770" }
      - { path: "config", mode: "0770" }
      - { path: "keytool_files", mode: "0555" }
      - { path: "keytool_files/backup", mode: "0555" }

  - name: "create shell scripts from templates to script directory"
    template:
      src: "{{ item.src }}.j2"
      dest: "{{ item.dest }}"
      group: "{{ api_group }}"
      owner: "{{ api_user }}"
      mode: "{{ item.mode }}"
      force: yes
    with_items:
      - { src: "{{ jenkins_restart_script }}", dest: "{{ jenkins_restart_path }}", mode: "0754" }
      - { src: "{{ restart_container_script }}", dest: "{{ restart_container_path }}", mode: "0554"}

  - name: "check if lines present in sudoers file"
    lineinfile:
      path: /etc/sudoers
      line: "{{ item }}"
    register: content_has_lines
    check_mode: yes
    with_items:
      - "{{ disable_requiretty_for_api_user }}"
      - "{{ api_user }} ALL=(ALL) NOPASSWD: {{ restart_container_path }}"

  - name: "add new lines to sudoers file"
    lineinfile:
      path: /etc/sudoers
      insertafter: '## Allow root to run any commands anywhere'
      line: "{{ item.line }}"
    when: item.status is changed
    with_items:
      - { status: "{{ content_has_lines.results[0] }}", line: "{{ disable_requiretty_for_api_user }}"}
      - { status: "{{ content_has_lines.results[1] }}", line: "{{ api_user }} ALL=(ALL) NOPASSWD: {{ restart_container_path }}"}

  - name: "setup environment for dropwizard api"
    import_tasks: dropwizard-api.yml
    when: dropwizard_api

  - name: "setup environment for express api"
    import_tasks: express-api.yml
    when: express_api
